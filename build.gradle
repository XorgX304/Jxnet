
allprojects {

    apply plugin: 'java'

    group = 'com.ardikars.jxnet'
    version = '1.1.1-SHAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

}

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }
jar.dependsOn subprojects.tasks["classes"]

jar {
    subprojects.each { subproject ->
        from subproject.sourceSets.main.output.classesDir
        from subproject.sourceSets.main.output.resourcesDir
    }
}

task ndkBuild(type: Exec) {
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		commandLine "${NDK_HOME}/ndk-build.cmd", '-C', file('.').absolutePath
	} else {
		commandLine "${NDK_HOME}/ndk-build.cmd", '-C', file('.').absolutePath
	}
}

task ndkClean(type: Exec) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		commandLine "${NDK_HOME}/ndk-build.cmd", 'clean', '-C', file('.').absolutePath
	} else {
		commandLine "${NDK_HOME}/ndk-build.cmd", 'clean', '-C', file('.').absolutePath
	}
}

tasks.withType(JavaCompile) {
	compileTask -> compileTask.dependsOn ndkBuild
}

clean.dependsOn 'ndkClean'
